{"version":3,"sources":["abi sync /^/.//.*/.json$","utils.tsx","pages/vesting_page.tsx","lib/utilities.ts","App.tsx","pages/daily_page.tsx","pages/banter_page.tsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","numberWithCommas","n","parts","toString","split","replace","loadContract","filename","address","a","abi","require","web3","Web3","givenProvider","eth","Contract","configureMoonbaseAlpha","detectEthereumProvider","mustBeMetaMask","provider","console","log","request","method","process","params","chainId","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","error","on","window","location","reload","renderer","days","hours","minutes","seconds","completed","DURATION_STRATEGIC","DURATION_PRIVATE","VestingPage","props","contract","useState","startTime","setStartTime","totalReleased","setTotalReleased","totalAvailable","setTotalAvailable","isStrategic","setIsStrategic","showData","setShowData","start","methods","call","Math","round","Date","getTime","getTotalReleased","from","parseFloat","utils","fromWei","toFixed","getAvailableAmount","balances","strategicInvestor","setInterval","claim","withdraw","send","response","status","className","date","Number","onClick","ellipseAddress","width","slice","web3Modal","DailyPage","BanterPage","Web3Modal","network","cacheProvider","providerOptions","initialState","web3Provider","reducer","state","action","type","App","useReducer","dispatch","vestingContract","setVestingContract","banterContract","setBanterContract","dailyContract","setDailyContract","useEffect","vesting","banter","daily","connect","useCallback","providers","Web3Provider","signer","getSigner","getAddress","getNetwork","disconnect","clearCachedProvider","cachedProvider","handleAccountsChanged","accounts","handleChainChanged","_hexChainId","handleDisconnect","removeListener","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ca161b8.chunk.js","sourcesContent":["var map = {\n\t\"./MscpToken.json\": 590,\n\t\"./MscpVesting.json\": 591,\n\t\"./MscpVesting30M.json\": 592,\n\t\"./MscpVesting5M.json\": 593\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 589;","import Web3 from \"web3\";\nimport detectEthereumProvider from '@metamask/detect-provider';\n\nexport function numberWithCommas(n: any) {\n    var parts=n.toString().split(\".\");\n    return parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + (parts[1] ? \".\" + parts[1] : \"\");\n}\n\nexport const loadContract = async (filename: string, address: string) => {\n    const abi = require(`./abi/${filename}.json`);\n    const web3 = new Web3(Web3.givenProvider);\n    return new web3.eth.Contract(abi, address);\n}\n\nexport const configureMoonbaseAlpha = async () => {\n    const provider = await detectEthereumProvider({ mustBeMetaMask: true }) as any;\n    if (provider) {\n        console.log(provider, 'provider');\n        try {\n            await provider.request({ method: \"eth_requestAccounts\"});\n            const activeChain = process.env.REACT_APP_ACTIVE_CHAIN as string;\n            console.log( typeof activeChain, 'activeChain');\n            switch (activeChain) {\n                case '4':\n                    console.log('change to rinkeby')\n                    await provider.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [{ chainId: \"0x4\" }]\n                      });\n                    break;\n                case '1287':\n                    await provider.request({\n                        method: \"wallet_addEthereumChain\",\n                        params: [\n                            {\n                                chainId: \"0x507\",\n                                chainName: \"Moonbase Alpha\",\n                                nativeCurrency: {\n                                    name: 'DEV',\n                                    symbol: 'DEV',\n                                    decimals: 18\n                                },\n                            rpcUrls: [\"https://rpc.testnet.moonbeam.network\"],\n                            blockExplorerUrls: [\"https://moonbase-blockscout.testnet.moonbeam.network/\"]\n                            },\n                        ]\n                    })\n                    await provider.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [{ chainId: \"0x507\" }]\n                      });\n                    break;\n                case '1285':\n                    await provider.request({\n                        method: \"wallet_addEthereumChain\",\n                    params: [\n                        {\n                            chainId: \"0x505\",\n                            chainName: \"Moonriver\",\n                            nativeCurrency: {\n                                name: 'MOVR',\n                                symbol: 'MOVR',\n                                decimals: 18\n                            },\n                        rpcUrls: [\"https://rpc.moonriver.moonbeam.network\"],\n                        blockExplorerUrls: [\"https://blockscout.moonriver.moonbeam.network/\"]\n                        },\n                    ]\n                    })\n                    await provider.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [{ chainId: \"0x505\" }]\n                      });\n                    break;\n            \n                default:\n                    break;\n            }\n        } catch(e) {\n            console.error(e);\n        }  \n\n        provider.on(\"chainChanged\", () => {         \n            window.location.reload()\n        })\n    } else {\n        console.error(\"Please install MetaMask\");\n    }\n}\n\nexport const renderer = ({ days, hours, minutes, seconds, completed }: any) => {\n    return <span>{days}d {hours}h {minutes}m {seconds}s</span>;\n  };\n\nexport const DURATION_STRATEGIC = process.env.REACT_APP_DURATION_STRATEGIC as string; //150 days\nexport const DURATION_PRIVATE = process.env.REACT_APP_DURATION_PRIVATE as string; // 300 days\n\nexport const SUPPLY_PRIVATE = process.env.REACT_APP_SUPPLY_PRIVATE as string;\nexport const SUPPLY_STRATEGIC = process.env.REACT_APP_SUPPLY_STRATEGIC as string;\n\nexport const BONUS_PRIVATE = 1500000;\nexport const BONUS_STRATEGIC = 2000000;\n\nexport const TOTAL_VESTING = process.env.REACT_APP_TOTAL_VESTING as string;\nexport const TOTAL_DAILY = process.env.REACT_APP_TOTAL_DAILY as string;\nexport const TOTAL_BANTER = process.env.REACT_APP_TOTAL_BANTER as string;\n","import { useState } from \"react\"\nimport Countdown from \"react-countdown\";\nimport Web3 from \"web3\";\nimport { DURATION_PRIVATE, DURATION_STRATEGIC, numberWithCommas, renderer, TOTAL_VESTING } from \"../utils\"\n\nconst VestingPage = (props: any) => {\n    const {address, contract} = props;\n    const [startTime, setStartTime] = useState<any>(0);\n    const [totalReleased, setTotalReleased] = useState<any>(0);\n    const [totalAvailable, setTotalAvailable] = useState<any>(0);\n    const [isStrategic, setIsStrategic] = useState<any>(false);\n    const [showData, setShowData] = useState<any>(false);\n\n \n    let start = (async () => {\n        if(contract){\n          const startTime = await contract.methods.startTime().call();\n          setStartTime(startTime);\n          if(startTime <= Math.round(new Date().getTime()/1000)){\n            if(showData === false) {\n              setShowData(true)\n            }\n          }\n            if(address) {\n                let totalReleased = await contract.methods.getTotalReleased().call({from: address});\n                totalReleased = parseFloat(Web3.utils.fromWei(totalReleased, \"ether\")).toFixed(6);\n                setTotalReleased(totalReleased);\n                let totalAvailable = await contract.methods.getAvailableAmount().call({from: address});\n                totalAvailable = parseFloat(Web3.utils.fromWei(totalAvailable, \"ether\")).toFixed(6);\n                setTotalAvailable(totalAvailable);\n                const balances = await contract.methods.balances(address).call()\n                setIsStrategic(balances.strategicInvestor);\n            } else {\n                setTotalAvailable(0);\n                setTotalReleased(0);\n            }\n        }\n\n    })\n\n    start();\n\n    setInterval(async () => {\n        start();\n    }, 1000 * 60)\n\n\n\n    const claim = async () => {\n        const response = await contract.methods.withdraw().send({from: address});\n        if(response && response.status === true) {\n            let totalReleased = await contract.methods.getTotalReleased().call({from: address});\n            totalReleased = parseFloat(Web3.utils.fromWei(totalReleased, \"ether\")).toFixed(6);\n            setTotalReleased(totalReleased);\n\n            let totalAvailable = await contract.methods.getAvailableAmount().call({from: address});\n            totalAvailable = parseFloat(Web3.utils.fromWei(totalAvailable, \"ether\")).toFixed(6);\n            setTotalAvailable(totalAvailable);\n        }\n      }\n      \n    return (\n        <div className=\"popup\"> \n        <div className=\"popup-inner\">\n          <h1>\n            MSCP Token Vesting\n          </h1>\n            <div className=\"info-list\" >\n                <div className=\"info-list--item\">\n                  <p>\n                    Total Allocated\n                  </p>\n  \n                  <p className=\"number\">\n                    {numberWithCommas(TOTAL_VESTING)}\n                  </p>\n                </div>\n                <div className=\"info-list--item\">\n                  <p>\n                    Total Released\n                  </p>\n  \n                  <p className=\"number\">\n                  { (!showData) ? '???' : numberWithCommas(totalReleased)}\n                  </p>\n                </div>\n  \n                <div className=\"info-list--item\">\n                  <p>\n                    Available to claim\n                  </p>\n  \n                  <p className=\"number\">\n                  { (!showData) ? '???' : numberWithCommas(totalAvailable)}\n                  </p>\n                </div>\n  \n                <div className=\"info-list--item\">\n                  <p>\n                    Vesting ends in\n                  </p>\n  \n                  <p className=\"number\">\n                  { (!showData || !startTime) ? '???' :  <Countdown renderer={renderer} date={startTime*1000 + (isStrategic ? Number(DURATION_STRATEGIC) : Number(DURATION_PRIVATE)) * 1000} /> }\n                  </p>\n                </div>\n            </div>\n            <span className=\"spacer\"></span>\n            <button className={`claim-btn ${(address && showData) ? 'active': 'inactive'}`} onClick={()=>{\n                if(address) {\n                    claim();\n                }\n            }}>\n              Claim\n            </button>\n        </div>\n      </div>\n    );\n}\nexport default VestingPage;","import supportedChains from './chains'\nimport { IChainData } from './types'\n\nexport function getChainData(chainId?: number): any {\n  if (!chainId) {\n    return null\n  }\n  const chainData = supportedChains.filter(\n    (chain: any) => chain.chain_id === chainId\n  )[0]\n\n  if (!chainData) {\n    throw new Error('ChainId missing or not supported')\n  }\n\n  const API_KEY = '460f40a260564ac4a4f4b3fffb032dad'\n\n  if (\n    chainData.rpc_url.includes('infura.io') &&\n    chainData.rpc_url.includes('%API_KEY%') &&\n    API_KEY\n  ) {\n    const rpcUrl = chainData.rpc_url.replace('%API_KEY%', API_KEY)\n\n    return {\n      ...chainData,\n      rpc_url: rpcUrl,\n    }\n  }\n\n  return chainData\n}\n\nexport function ellipseAddress(address = '', width = 10): string {\n  if (!address) {\n    return ''\n  }\n  return `${address.slice(0, width)}...${address.slice(-width)}`\n}","import React, { useState } from \"react\";\nimport './App.css';\nimport VestingPage from './pages/vesting_page';\nimport { providers } from 'ethers'\nimport { useCallback, useEffect, useReducer } from 'react'\nimport Web3Modal from 'web3modal'\nimport { ellipseAddress } from './lib/utilities'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  \n} from \"react-router-dom\";\nimport DailyPage from \"./pages/daily_page\";\nimport BanterPage from \"./pages/banter_page\";\nimport { configureMoonbaseAlpha, loadContract } from \"./utils\";\n\nconst providerOptions = {};\nlet web3Modal: any\nif (typeof window !== 'undefined') {\n  web3Modal = new Web3Modal({\n    network: 'mainnet', // optional\n    cacheProvider: true,\n    providerOptions, // required\n  })\n}\n\ntype StateType = {\n    provider?: any\n    web3Provider?: any\n    address?: string\n    chainId?: number\n}\n\ntype ActionType =\n  | {\n      type: 'SET_WEB3_PROVIDER'\n      provider?: StateType['provider']\n      web3Provider?: StateType['web3Provider']\n      address?: StateType['address']\n      chainId?: StateType['chainId']\n    }\n  | {\n      type: 'SET_ADDRESS'\n      address?: StateType['address']\n    }\n  | {\n      type: 'SET_CHAIN_ID'\n      chainId?: StateType['chainId']\n    }\n  | {\n      type: 'RESET_WEB3_PROVIDER'\n}\n\n\nconst initialState: StateType = {\n    provider: null,\n    web3Provider: null,\n    address: null as any,\n    chainId: null as any,\n  }\n\n  function reducer(state: StateType, action: ActionType): StateType {\n    switch (action.type) {\n      case 'SET_WEB3_PROVIDER':\n        return {\n          ...state,\n          provider: action.provider,\n          web3Provider: action.web3Provider,\n          address: action.address,\n          chainId: action.chainId,\n        }\n      case 'SET_ADDRESS':\n        return {\n          ...state,\n          address: action.address,\n        }\n      case 'SET_CHAIN_ID':\n        return {\n          ...state,\n          chainId: action.chainId,\n        }\n      case 'RESET_WEB3_PROVIDER':\n        return initialState\n      default:\n        throw new Error()\n    }\n  }\n\n\n/// web 3 end\n\nconst App = () => {\n\n    const [state, dispatch] = useReducer(reducer, initialState)\n    const { provider, address } = state;\n    const [vestingContract, setVestingContract] = useState<any>(null);\n    const [banterContract, setBanterContract] = useState<any>(null);\n    const [dailyContract, setDailyContract] = useState<any>(null);\n\n    // \n\n    useEffect(() => {\n        (async () => {\n            configureMoonbaseAlpha();\n            const vesting = await loadContract(\"MscpVesting\", process.env.REACT_APP_VESTING_ADDRESS as string);\n            (window as any).vesting = vesting;\n            setVestingContract(vesting);\n\n            const banter = await loadContract(\"MscpVesting30M\", process.env.REACT_APP_BANTER_ADDRESS as string);\n            (window as any).banter = banter;\n            setBanterContract(banter);\n\n            const daily = await loadContract(\"MscpVesting5M\", process.env.REACT_APP_DAILY_ADDRESS as string);\n            (window as any).daily = daily;\n            setDailyContract(daily);\n          })()\n    }, [])\n\n    const connect = useCallback(async function () {\n        const provider = await web3Modal.connect()\n        const web3Provider = new providers.Web3Provider(provider)\n    \n        const signer = web3Provider.getSigner()\n        const address = await signer.getAddress()\n    \n        const network = await web3Provider.getNetwork()\n\n        \n    \n    \n    \n        dispatch({\n          type: 'SET_WEB3_PROVIDER',\n          provider,\n          web3Provider,\n          address,\n          chainId: network.chainId,\n        })\n      }, [])\n\n\n      const disconnect = useCallback(\n        async function () {\n          await web3Modal.clearCachedProvider()\n          if (provider?.disconnect && typeof provider.disconnect === 'function') {\n            await provider.disconnect()\n          }\n          dispatch({\n            type: 'RESET_WEB3_PROVIDER',\n          })\n        },\n        [provider]\n      )\n    \n      useEffect(() => {\n        if (web3Modal.cachedProvider) {\n          connect()\n        }\n      }, [connect])\n\n\n      useEffect(() => {\n        if (provider?.on) {\n          const handleAccountsChanged = (accounts: string[]) => {\n            console.log('accountsChanged', accounts)\n            dispatch({\n              type: 'SET_ADDRESS',\n              address: accounts[0],\n            })\n          }\n    \n          const handleChainChanged = (_hexChainId: string) => {\n            window.location.reload()\n          }\n    \n          const handleDisconnect = (error: { code: number; message: string }) => {\n            console.log('disconnect', error)\n            disconnect()\n          }\n    \n          provider.on('accountsChanged', handleAccountsChanged)\n          provider.on('chainChanged', handleChainChanged)\n          provider.on('disconnect', handleDisconnect)\n    \n          return () => {\n            if (provider.removeListener) {\n              provider.removeListener('accountsChanged', handleAccountsChanged)\n              provider.removeListener('chainChanged', handleChainChanged)\n              provider.removeListener('disconnect', handleDisconnect)\n            }\n          }\n        }\n      }, [provider, disconnect])\n\n    return (\n      <div>\n      <header>\n        <div className=\"wallet-section\">\n        {!address && <button\n       className=\"connect-btn\" id=\"btn-connect\"\n       onClick={async () => {\n         console.log('cicked');\n         connect();\n       }}\n       >\n              Connect wallet\n          </button>}\n\n          {address && <div>\n            <p>\n            {ellipseAddress(address)}\n          </p> <button\n       className=\"connect-btn\" id=\"btn-connect\"\n       onClick={async () => {\n         console.log('cicked');\n         disconnect();\n       }}\n       >\n              Disconnect\n          </button>\n            </div>}\n        </div>\n      </header>\n        \n        <Routes>\n          <Route path=\"/vesting\" element={<VestingPage address={address} contract={vestingContract} />}>\n          </Route>\n          <Route path=\"/daily\" element={<DailyPage  address={address} contract={dailyContract} />}>\n            \n          </Route>\n          <Route path=\"/banter\" element={<BanterPage  address={address} contract={banterContract} />}>\n            \n          </Route>\n        </Routes>\n      </div>\n    );\n}\n\nexport default App;","import { useState } from \"react\"\nimport Countdown from \"react-countdown\";\nimport Web3 from \"web3\";\nimport { DURATION_PRIVATE, DURATION_STRATEGIC, numberWithCommas, renderer, TOTAL_DAILY } from \"../utils\"\n\nconst DailyPage = (props: any) => {\n    const {address, contract} = props;\n    const [startTime, setStartTime] = useState<any>(0);\n    const [totalReleased, setTotalReleased] = useState<any>(0);\n    const [totalAvailable, setTotalAvailable] = useState<any>(0);\n    const [isStrategic, setIsStrategic] = useState<any>(false);\n    const [showData, setShowData] = useState<any>(false);\n\n    let start = (async () => {\n        if(contract){\n            const startTime = await contract.methods.startTime().call();\n            setStartTime(startTime);\n            if(startTime <= Math.round(new Date().getTime()/1000)){\n              if(showData === false) {\n                setShowData(true)\n              }\n            }\n            if(address) {\n                let totalReleased = await contract.methods.getTotalReleased().call({from: address});\n                totalReleased = parseFloat(Web3.utils.fromWei(totalReleased, \"ether\")).toFixed(6);\n                setTotalReleased(totalReleased);\n                let totalAvailable = await contract.methods.getAvailableAmount().call({from: address});\n                totalAvailable = parseFloat(Web3.utils.fromWei(totalAvailable, \"ether\")).toFixed(6);\n                setTotalAvailable(totalAvailable);\n            } else {\n                setTotalAvailable(0);\n                setTotalReleased(0);\n            }\n        }\n\n    })\n\n    start();\n\n    setInterval(async () => {\n        start();\n    }, 1000 * 60)\n\n\n\n    const claim = async () => {\n        const response = await contract.methods.withdraw().send({from: address});\n        if(response && response.status === true) {\n            let totalReleased = await contract.methods.getTotalReleased().call({from: address});\n            totalReleased = parseFloat(Web3.utils.fromWei(totalReleased, \"ether\")).toFixed(6);\n            setTotalReleased(totalReleased);\n\n            let totalAvailable = await contract.methods.getAvailableAmount().call({from: address});\n            totalAvailable = parseFloat(Web3.utils.fromWei(totalAvailable, \"ether\")).toFixed(6);\n            setTotalAvailable(totalAvailable);\n        }\n      }\n      \n      return (\n        <div className=\"popup\"> \n        <div className=\"popup-inner\">\n          <h1>\n            MSCP Token Vesting\n          </h1>\n            <div className=\"info-list\" >\n                <div className=\"info-list--item\">\n                  <p>\n                    Total Allocated\n                  </p>\n  \n                  <p className=\"number\">\n                    {numberWithCommas(TOTAL_DAILY)}\n                  </p>\n                </div>\n                <div className=\"info-list--item\">\n                  <p>\n                    Total Released\n                  </p>\n  \n                  <p className=\"number\">\n                  { (!showData) ? '???' : numberWithCommas(totalReleased)}\n                  </p>\n                </div>\n  \n                <div className=\"info-list--item\">\n                  <p>\n                    Available to claim\n                  </p>\n  \n                  <p className=\"number\">\n                  { (!showData) ? '???' : numberWithCommas(totalAvailable)}\n                  </p>\n                </div>\n  \n                <div className=\"info-list--item\">\n                  <p>\n                    Vesting ends in\n                  </p>\n  \n                  <p className=\"number\">\n                  { (!showData || !startTime) ? '???' :  <Countdown renderer={renderer} date={startTime*1000 + (isStrategic ? Number(DURATION_STRATEGIC) : Number(DURATION_PRIVATE)) * 1000} /> }\n                  </p>\n                </div>\n            </div>\n            <span className=\"spacer\"></span>\n            <button className={`claim-btn ${(address && showData) ? 'active': 'inactive'}`} onClick={()=>{\n                if(address) {\n                    claim();\n                }\n            }}>\n              Claim\n            </button>\n        </div>\n      </div>\n    );\n}\nexport default DailyPage;","import { useState } from \"react\"\nimport Countdown from \"react-countdown\";\nimport Web3 from \"web3\";\nimport { DURATION_PRIVATE, DURATION_STRATEGIC, numberWithCommas, renderer, TOTAL_BANTER } from \"../utils\"\n\nconst BanterPage = (props: any) => {\n    const {address, contract} = props;\n    const [startTime, setStartTime] = useState<any>(0);\n    const [totalReleased, setTotalReleased] = useState<any>(0);\n    const [totalAvailable, setTotalAvailable] = useState<any>(0);\n    const [isStrategic, setIsStrategic] = useState<any>(false);\n    const [showData, setShowData] = useState<any>(false);\n\n \n    let start = (async () => {\n        if(contract){\n          const startTime = await contract.methods.startTime().call();\n          setStartTime(startTime);\n          if(startTime <= Math.round(new Date().getTime()/1000)){\n            if(showData === false) {\n              setShowData(true)\n            }\n          }\n            if(address) {\n                let totalReleased = await contract.methods.getTotalReleased().call({from: address});\n                totalReleased = parseFloat(Web3.utils.fromWei(totalReleased, \"ether\")).toFixed(6);\n                setTotalReleased(totalReleased);\n                let totalAvailable = await contract.methods.getAvailableAmount().call({from: address});\n                totalAvailable = parseFloat(Web3.utils.fromWei(totalAvailable, \"ether\")).toFixed(6);\n                setTotalAvailable(totalAvailable);\n            } else {\n                setTotalAvailable(0);\n                setTotalReleased(0);\n            }\n        }\n\n    })\n\n    start();\n\n    setInterval(async () => {\n        start();\n    }, 1000 * 60)\n\n\n\n    const claim = async () => {\n        const response = await contract.methods.withdraw().send({from: address});\n        if(response && response.status === true) {\n            let totalReleased = await contract.methods.getTotalReleased().call({from: address});\n            totalReleased = parseFloat(Web3.utils.fromWei(totalReleased, \"ether\")).toFixed(6);\n            setTotalReleased(totalReleased);\n\n            let totalAvailable = await contract.methods.getAvailableAmount().call({from: address});\n            totalAvailable = parseFloat(Web3.utils.fromWei(totalAvailable, \"ether\")).toFixed(6);\n            setTotalAvailable(totalAvailable);\n        }\n      }\n      \n      return (\n        <div className=\"popup\"> \n        <div className=\"popup-inner\">\n          <h1>\n            MSCP Token Vesting\n          </h1>\n            <div className=\"info-list\" >\n                <div className=\"info-list--item\">\n                  <p>\n                    Total Allocated\n                  </p>\n  \n                  <p className=\"number\">\n                    {numberWithCommas(TOTAL_BANTER)}\n                  </p>\n                </div>\n                <div className=\"info-list--item\">\n                  <p>\n                    Total Released\n                  </p>\n  \n                  <p className=\"number\">\n                  { (!showData) ? '???' : numberWithCommas(totalReleased)}\n                  </p>\n                </div>\n  \n                <div className=\"info-list--item\">\n                  <p>\n                    Available to claim\n                  </p>\n  \n                  <p className=\"number\">\n                  { (!showData) ? '???' : numberWithCommas(totalAvailable)}\n                  </p>\n                </div>\n  \n                <div className=\"info-list--item\">\n                  <p>\n                    Vesting ends in\n                  </p>\n  \n                  <p className=\"number\">\n                  { (!showData || !startTime) ? '???' :  <Countdown renderer={renderer} date={startTime*1000 + (isStrategic ? Number(DURATION_STRATEGIC) : Number(DURATION_PRIVATE)) * 1000} /> }\n                  </p>\n                </div>\n            </div>\n            <span className=\"spacer\"></span>\n            <button className={`claim-btn ${(address && showData) ? 'active': 'inactive'}`} onClick={()=>{\n                if(address) {\n                    claim();\n                }\n            }}>\n              Claim\n            </button>\n        </div>\n      </div>\n    );\n}\nexport default BanterPage;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Web3ReactProvider, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector'\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from '@web3-react/frame-connector'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Web3ReactProvider getLibrary={getLibrary}> */}\n    <HashRouter>\n    <App />\n    </HashRouter>\n    {/* </Web3ReactProvider> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}