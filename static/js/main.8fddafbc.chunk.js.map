{"version":3,"sources":["abi sync /^/.//.*/.json$","utils.tsx","pages/vesting_page.tsx","lib/utilities.ts","App.tsx","pages/daily_page.tsx","pages/banter_page.tsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","numberWithCommas","n","parts","toString","split","replace","loadContract","filename","address","a","abi","require","web3","Web3","givenProvider","eth","Contract","DURATION_STRATEGIC","process","DURATION_PRIVATE","TOTAL","VestingPage","props","contract","useState","startTime","setStartTime","totalReleased","setTotalReleased","totalAvailable","setTotalAvailable","isStrategic","setIsStrategic","start","methods","call","getTotalReleased","from","parseFloat","utils","fromWei","toFixed","getAvailableAmount","balances","strategicInvestor","setInterval","claim","withdraw","send","response","status","className","date","Number","onClick","ellipseAddress","width","slice","web3Modal","DailyPage","BanterPage","window","Web3Modal","network","cacheProvider","providerOptions","initialState","provider","web3Provider","chainId","reducer","state","action","type","App","useReducer","dispatch","vestingContract","setVestingContract","banterContract","setBanterContract","dailyContract","setDailyContract","useEffect","vesting","banter","daily","connect","useCallback","providers","Web3Provider","signer","getSigner","getAddress","getNetwork","disconnect","clearCachedProvider","cachedProvider","on","handleAccountsChanged","accounts","console","log","handleChainChanged","_hexChainId","location","reload","handleDisconnect","error","removeListener","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.8fddafbc.chunk.js","sourcesContent":["var map = {\n\t\"./MscpToken.json\": 588,\n\t\"./MscpVesting.json\": 589\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 587;","import Web3 from \"web3\";\n\nexport function numberWithCommas(n: any) {\n    var parts=n.toString().split(\".\");\n    return parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + (parts[1] ? \".\" + parts[1] : \"\");\n}\n\nexport const loadContract = async (filename: string, address: string) => {\n    const abi = require(`./abi/${filename}.json`);\n    const web3 = new Web3(Web3.givenProvider);\n    return new web3.eth.Contract(abi, address);\n}\n\nexport const DURATION_STRATEGIC = process.env.REACT_APP_DURATION_STRATEGIC as string; //150 days\nexport const DURATION_PRIVATE = process.env.REACT_APP_DURATION_PRIVATE as string; // 300 days\n\nexport const SUPPLY_PRIVATE = process.env.REACT_APP_SUPPLY_PRIVATE as string;\nexport const SUPPLY_STRATEGIC = process.env.REACT_APP_SUPPLY_STRATEGIC as string;\n\nexport const BONUS_PRIVATE = 1500000;\nexport const BONUS_STRATEGIC = 2000000;\n\nexport const TOTAL = process.env.REACT_APP_TOTAL as string;","import { useState } from \"react\"\nimport Countdown from \"react-countdown\";\nimport Web3 from \"web3\";\nimport { DURATION_PRIVATE, DURATION_STRATEGIC, numberWithCommas, TOTAL } from \"../utils\"\n\nconst VestingPage = (props: any) => {\n    const {address, contract} = props;\n    const [startTime, setStartTime] = useState<any>(0);\n    const [totalReleased, setTotalReleased] = useState<any>(0);\n    const [totalAvailable, setTotalAvailable] = useState<any>(0);\n    const [isStrategic, setIsStrategic] = useState<any>(false);\n\n \n    let start = (async () => {\n        if(contract){\n            const startTime = await contract.methods.startTime().call();\n            setStartTime(startTime);\n            if(address) {\n                let totalReleased = await contract.methods.getTotalReleased().call({from: address});\n                totalReleased = parseFloat(Web3.utils.fromWei(totalReleased, \"ether\")).toFixed(6);\n                setTotalReleased(totalReleased);\n                let totalAvailable = await contract.methods.getAvailableAmount().call({from: address});\n                totalAvailable = parseFloat(Web3.utils.fromWei(totalAvailable, \"ether\")).toFixed(6);\n                setTotalAvailable(totalAvailable);\n                const balances = await contract.methods.balances(address).call()\n                setIsStrategic(balances.strategicInvestor);\n            } else {\n                setTotalAvailable(0);\n                setTotalReleased(0);\n            }\n        }\n\n    })\n\n    start();\n\n    setInterval(async () => {\n        start();\n    }, 1000 * 60)\n\n\n\n    const claim = async () => {\n        const response = await contract.methods.withdraw().send({from: address});\n        if(response && response.status === true) {\n            let totalReleased = await contract.methods.getTotalReleased().call({from: address});\n            totalReleased = parseFloat(Web3.utils.fromWei(totalReleased, \"ether\")).toFixed(6);\n            setTotalReleased(totalReleased);\n\n            let totalAvailable = await contract.methods.getAvailableAmount().call({from: address});\n            totalAvailable = parseFloat(Web3.utils.fromWei(totalAvailable, \"ether\")).toFixed(6);\n            setTotalAvailable(totalAvailable);\n        }\n      }\n      \n    return (\n        <div className=\"popup\"> \n        <div className=\"popup-inner\">\n          <h1>\n            MSCP Token Vesting\n          </h1>\n            <div className=\"info-list\" >\n                <div className=\"info-list--item\">\n                  <p>\n                    Total Allocated\n                  </p>\n  \n                  <p className=\"number\">\n                    {numberWithCommas(TOTAL)}\n                  </p>\n                </div>\n                <div className=\"info-list--item\">\n                  <p>\n                    Total Released\n                  </p>\n  \n                  <p className=\"number\">\n                  { !totalReleased ? '???' : numberWithCommas(totalReleased)}\n                  </p>\n                </div>\n  \n                <div className=\"info-list--item\">\n                  <p>\n                    Available to claim\n                  </p>\n  \n                  <p className=\"number\">\n                  { !totalAvailable ? '???' : numberWithCommas(totalAvailable)}\n                  </p>\n                </div>\n  \n                <div className=\"info-list--item\">\n                  <p>\n                    Vesting ends in\n                  </p>\n  \n                  <p className=\"number\">\n                  { !startTime ? '???' :  <Countdown date={startTime*1000 + (isStrategic ? Number(DURATION_STRATEGIC) : Number(DURATION_PRIVATE)) * 1000} /> }\n                  </p>\n                </div>\n            </div>\n            <span className=\"spacer\"></span>\n            <button className={`claim-btn ${address ? 'active': 'inactive'}`} onClick={()=>{\n                if(address) {\n                    claim();\n                }\n            }}>\n              Claim\n            </button>\n        </div>\n      </div>\n    );\n}\nexport default VestingPage;","import supportedChains from './chains'\nimport { IChainData } from './types'\n\nexport function getChainData(chainId?: number): any {\n  if (!chainId) {\n    return null\n  }\n  const chainData = supportedChains.filter(\n    (chain: any) => chain.chain_id === chainId\n  )[0]\n\n  if (!chainData) {\n    throw new Error('ChainId missing or not supported')\n  }\n\n  const API_KEY = '460f40a260564ac4a4f4b3fffb032dad'\n\n  if (\n    chainData.rpc_url.includes('infura.io') &&\n    chainData.rpc_url.includes('%API_KEY%') &&\n    API_KEY\n  ) {\n    const rpcUrl = chainData.rpc_url.replace('%API_KEY%', API_KEY)\n\n    return {\n      ...chainData,\n      rpc_url: rpcUrl,\n    }\n  }\n\n  return chainData\n}\n\nexport function ellipseAddress(address = '', width = 10): string {\n  if (!address) {\n    return ''\n  }\n  return `${address.slice(0, width)}...${address.slice(-width)}`\n}","import React, { useState } from \"react\";\nimport './App.css';\nimport VestingPage from './pages/vesting_page';\nimport { providers } from 'ethers'\nimport { useCallback, useEffect, useReducer } from 'react'\nimport Web3Modal from 'web3modal'\nimport { ellipseAddress } from './lib/utilities'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  \n} from \"react-router-dom\";\nimport DailyPage from \"./pages/daily_page\";\nimport BanterPage from \"./pages/banter_page\";\nimport { loadContract } from \"./utils\";\n\nconst providerOptions = {};\nlet web3Modal: any\nif (typeof window !== 'undefined') {\n  web3Modal = new Web3Modal({\n    network: 'mainnet', // optional\n    cacheProvider: true,\n    providerOptions, // required\n  })\n}\n\ntype StateType = {\n    provider?: any\n    web3Provider?: any\n    address?: string\n    chainId?: number\n}\n\ntype ActionType =\n  | {\n      type: 'SET_WEB3_PROVIDER'\n      provider?: StateType['provider']\n      web3Provider?: StateType['web3Provider']\n      address?: StateType['address']\n      chainId?: StateType['chainId']\n    }\n  | {\n      type: 'SET_ADDRESS'\n      address?: StateType['address']\n    }\n  | {\n      type: 'SET_CHAIN_ID'\n      chainId?: StateType['chainId']\n    }\n  | {\n      type: 'RESET_WEB3_PROVIDER'\n}\n\n\nconst initialState: StateType = {\n    provider: null,\n    web3Provider: null,\n    address: null as any,\n    chainId: null as any,\n  }\n\n  function reducer(state: StateType, action: ActionType): StateType {\n    switch (action.type) {\n      case 'SET_WEB3_PROVIDER':\n        return {\n          ...state,\n          provider: action.provider,\n          web3Provider: action.web3Provider,\n          address: action.address,\n          chainId: action.chainId,\n        }\n      case 'SET_ADDRESS':\n        return {\n          ...state,\n          address: action.address,\n        }\n      case 'SET_CHAIN_ID':\n        return {\n          ...state,\n          chainId: action.chainId,\n        }\n      case 'RESET_WEB3_PROVIDER':\n        return initialState\n      default:\n        throw new Error()\n    }\n  }\n\n\n/// web 3 end\n\nconst App = () => {\n\n    const [state, dispatch] = useReducer(reducer, initialState)\n    const { provider, address } = state;\n    const [vestingContract, setVestingContract] = useState<any>(null);\n    const [banterContract, setBanterContract] = useState<any>(null);\n    const [dailyContract, setDailyContract] = useState<any>(null);\n\n    useEffect(() => {\n        (async () => {\n            const vesting = await loadContract(\"MscpVesting\", process.env.REACT_APP_VESTING_ADDRESS as string);\n            (window as any).vesting = vesting;\n            setVestingContract(vesting);\n\n            const banter = await loadContract(\"MscpVesting\", process.env.REACT_APP_BANTER_ADDRESS as string);\n            (window as any).banter = banter;\n            setBanterContract(banter);\n\n            const daily = await loadContract(\"MscpVesting\", process.env.REACT_APP_DAILY_ADDRESS as string);\n            (window as any).daily = daily;\n            setDailyContract(daily);\n          })()\n    }, [])\n\n    const connect = useCallback(async function () {\n        const provider = await web3Modal.connect()\n        const web3Provider = new providers.Web3Provider(provider)\n    \n        const signer = web3Provider.getSigner()\n        const address = await signer.getAddress()\n    \n        const network = await web3Provider.getNetwork()\n\n        \n    \n    \n    \n        dispatch({\n          type: 'SET_WEB3_PROVIDER',\n          provider,\n          web3Provider,\n          address,\n          chainId: network.chainId,\n        })\n      }, [])\n\n\n      const disconnect = useCallback(\n        async function () {\n          await web3Modal.clearCachedProvider()\n          if (provider?.disconnect && typeof provider.disconnect === 'function') {\n            await provider.disconnect()\n          }\n          dispatch({\n            type: 'RESET_WEB3_PROVIDER',\n          })\n        },\n        [provider]\n      )\n    \n      useEffect(() => {\n        if (web3Modal.cachedProvider) {\n          connect()\n        }\n      }, [connect])\n\n\n      useEffect(() => {\n        if (provider?.on) {\n          const handleAccountsChanged = (accounts: string[]) => {\n            console.log('accountsChanged', accounts)\n            dispatch({\n              type: 'SET_ADDRESS',\n              address: accounts[0],\n            })\n          }\n    \n          const handleChainChanged = (_hexChainId: string) => {\n            window.location.reload()\n          }\n    \n          const handleDisconnect = (error: { code: number; message: string }) => {\n            console.log('disconnect', error)\n            disconnect()\n          }\n    \n          provider.on('accountsChanged', handleAccountsChanged)\n          provider.on('chainChanged', handleChainChanged)\n          provider.on('disconnect', handleDisconnect)\n    \n          return () => {\n            if (provider.removeListener) {\n              provider.removeListener('accountsChanged', handleAccountsChanged)\n              provider.removeListener('chainChanged', handleChainChanged)\n              provider.removeListener('disconnect', handleDisconnect)\n            }\n          }\n        }\n      }, [provider, disconnect])\n\n    return (\n      <div>\n      <header>\n        <div className=\"wallet-section\">\n        {!address && <button\n       className=\"connect-btn\" id=\"btn-connect\"\n       onClick={async () => {\n         console.log('cicked');\n         connect();\n       }}\n       >\n              Connect wallet\n          </button>}\n\n          {address && <div>\n            <p>\n            {ellipseAddress(address)}\n          </p> <button\n       className=\"connect-btn\" id=\"btn-connect\"\n       onClick={async () => {\n         console.log('cicked');\n         disconnect();\n       }}\n       >\n              Disconnect\n          </button>\n            </div>}\n        </div>\n      </header>\n        \n        <Routes>\n          <Route path=\"/vesting\" element={<VestingPage address={address} contract={vestingContract} />}>\n          </Route>\n          <Route path=\"/daily\" element={<DailyPage  address={address} contract={dailyContract} />}>\n            \n          </Route>\n          <Route path=\"/banter\" element={<BanterPage  address={address} contract={banterContract} />}>\n            \n          </Route>\n        </Routes>\n      </div>\n    );\n}\n\nexport default App;","import { useState } from \"react\"\nimport Countdown from \"react-countdown\";\nimport Web3 from \"web3\";\nimport { DURATION_PRIVATE, DURATION_STRATEGIC, numberWithCommas, TOTAL } from \"../utils\"\n\nconst DailyPage = (props: any) => {\n    const {address, contract} = props;\n    const [startTime, setStartTime] = useState<any>(0);\n    const [totalReleased, setTotalReleased] = useState<any>(0);\n    const [totalAvailable, setTotalAvailable] = useState<any>(0);\n    const [isStrategic, setIsStrategic] = useState<any>(false);\n\n \n    let start = (async () => {\n        if(contract){\n            const startTime = await contract.methods.startTime().call();\n            setStartTime(startTime);\n            if(address) {\n                let totalReleased = await contract.methods.getTotalReleased().call({from: address});\n                totalReleased = parseFloat(Web3.utils.fromWei(totalReleased, \"ether\")).toFixed(6);\n                setTotalReleased(totalReleased);\n                let totalAvailable = await contract.methods.getAvailableAmount().call({from: address});\n                totalAvailable = parseFloat(Web3.utils.fromWei(totalAvailable, \"ether\")).toFixed(6);\n                setTotalAvailable(totalAvailable);\n                const balances = await contract.methods.balances(address).call()\n                setIsStrategic(balances.strategicInvestor);\n            } else {\n                setTotalAvailable(0);\n                setTotalReleased(0);\n            }\n        }\n\n    })\n\n    start();\n\n    setInterval(async () => {\n        start();\n    }, 1000 * 60)\n\n\n\n    const claim = async () => {\n        const response = await contract.methods.withdraw().send({from: address});\n        if(response && response.status === true) {\n            let totalReleased = await contract.methods.getTotalReleased().call({from: address});\n            totalReleased = parseFloat(Web3.utils.fromWei(totalReleased, \"ether\")).toFixed(6);\n            setTotalReleased(totalReleased);\n\n            let totalAvailable = await contract.methods.getAvailableAmount().call({from: address});\n            totalAvailable = parseFloat(Web3.utils.fromWei(totalAvailable, \"ether\")).toFixed(6);\n            setTotalAvailable(totalAvailable);\n        }\n      }\n      \n    return (\n        <div className=\"popup\"> \n        <div className=\"popup-inner\">\n          <h1>\n            MSCP Token Vesting\n          </h1>\n            <div className=\"info-list\" >\n                <div className=\"info-list--item\">\n                  <p>\n                    Total Allocated\n                  </p>\n  \n                  <p className=\"number\">\n                    {numberWithCommas(TOTAL)}\n                  </p>\n                </div>\n                <div className=\"info-list--item\">\n                  <p>\n                    Total Released\n                  </p>\n  \n                  <p className=\"number\">\n                  { !totalReleased ? '???' : numberWithCommas(totalReleased)}\n                  </p>\n                </div>\n  \n                <div className=\"info-list--item\">\n                  <p>\n                    Available to claim\n                  </p>\n  \n                  <p className=\"number\">\n                  { !totalAvailable ? '???' : numberWithCommas(totalAvailable)}\n                  </p>\n                </div>\n  \n                <div className=\"info-list--item\">\n                  <p>\n                    Vesting ends in\n                  </p>\n  \n                  <p className=\"number\">\n                  { !startTime ? '???' :  <Countdown date={startTime*1000 + (isStrategic ? Number(DURATION_STRATEGIC) : Number(DURATION_PRIVATE)) * 1000} /> }\n                  </p>\n                </div>\n            </div>\n            <span className=\"spacer\"></span>\n            <button className={`claim-btn ${address ? 'active': 'inactive'}`} onClick={()=>{\n                if(address) {\n                    claim();\n                }\n            }}>\n              Claim\n            </button>\n        </div>\n      </div>\n    );\n}\nexport default DailyPage;","import { useState } from \"react\"\nimport Countdown from \"react-countdown\";\nimport Web3 from \"web3\";\nimport { DURATION_PRIVATE, DURATION_STRATEGIC, numberWithCommas, TOTAL } from \"../utils\"\n\nconst BanterPage = (props: any) => {\n    const {address, contract} = props;\n    const [startTime, setStartTime] = useState<any>(0);\n    const [totalReleased, setTotalReleased] = useState<any>(0);\n    const [totalAvailable, setTotalAvailable] = useState<any>(0);\n    const [isStrategic, setIsStrategic] = useState<any>(false);\n\n \n    let start = (async () => {\n        if(contract){\n            const startTime = await contract.methods.startTime().call();\n            setStartTime(startTime);\n            if(address) {\n                let totalReleased = await contract.methods.getTotalReleased().call({from: address});\n                totalReleased = parseFloat(Web3.utils.fromWei(totalReleased, \"ether\")).toFixed(6);\n                setTotalReleased(totalReleased);\n                let totalAvailable = await contract.methods.getAvailableAmount().call({from: address});\n                totalAvailable = parseFloat(Web3.utils.fromWei(totalAvailable, \"ether\")).toFixed(6);\n                setTotalAvailable(totalAvailable);\n                const balances = await contract.methods.balances(address).call()\n                setIsStrategic(balances.strategicInvestor);\n            } else {\n                setTotalAvailable(0);\n                setTotalReleased(0);\n            }\n        }\n\n    })\n\n    start();\n\n    setInterval(async () => {\n        start();\n    }, 1000 * 60)\n\n\n\n    const claim = async () => {\n        const response = await contract.methods.withdraw().send({from: address});\n        if(response && response.status === true) {\n            let totalReleased = await contract.methods.getTotalReleased().call({from: address});\n            totalReleased = parseFloat(Web3.utils.fromWei(totalReleased, \"ether\")).toFixed(6);\n            setTotalReleased(totalReleased);\n\n            let totalAvailable = await contract.methods.getAvailableAmount().call({from: address});\n            totalAvailable = parseFloat(Web3.utils.fromWei(totalAvailable, \"ether\")).toFixed(6);\n            setTotalAvailable(totalAvailable);\n        }\n      }\n      \n    return (\n        <div className=\"popup\"> \n        <div className=\"popup-inner\">\n          <h1>\n            MSCP Token Vesting\n          </h1>\n            <div className=\"info-list\" >\n                <div className=\"info-list--item\">\n                  <p>\n                    Total Allocated\n                  </p>\n  \n                  <p className=\"number\">\n                    {numberWithCommas(TOTAL)}\n                  </p>\n                </div>\n                <div className=\"info-list--item\">\n                  <p>\n                    Total Released\n                  </p>\n  \n                  <p className=\"number\">\n                  { !totalReleased ? '???' : numberWithCommas(totalReleased)}\n                  </p>\n                </div>\n  \n                <div className=\"info-list--item\">\n                  <p>\n                    Available to claim\n                  </p>\n  \n                  <p className=\"number\">\n                  { !totalAvailable ? '???' : numberWithCommas(totalAvailable)}\n                  </p>\n                </div>\n  \n                <div className=\"info-list--item\">\n                  <p>\n                    Vesting ends in\n                  </p>\n  \n                  <p className=\"number\">\n                  { !startTime ? '???' :  <Countdown date={startTime*1000 + (isStrategic ? Number(DURATION_STRATEGIC) : Number(DURATION_PRIVATE)) * 1000} /> }\n                  </p>\n                </div>\n            </div>\n            <span className=\"spacer\"></span>\n            <button className={`claim-btn ${address ? 'active': 'inactive'}`} onClick={()=>{\n                if(address) {\n                    claim();\n                }\n            }}>\n              Claim\n            </button>\n        </div>\n      </div>\n    );\n}\nexport default BanterPage;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Web3ReactProvider, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector'\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from '@web3-react/frame-connector'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Web3ReactProvider getLibrary={getLibrary}> */}\n    <BrowserRouter basename=\"/moonscape\">\n    <App />\n    </BrowserRouter>\n    {/* </Web3ReactProvider> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}